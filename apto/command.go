/*
apto is a package automatically generated by ´gobi´. Happy hacking!
*/
package apto

import (
	"bytes"
	"errors"
	"strings"
)

// MyaptoExample is a example type automatically generated by ´gobi´.
type Command struct {
	Sudo    bool
	Tool    string
	Cmd     string
	Pkgs    []string
	Options []string
}

// New creates a new *Command
func NewCommand(sudo bool, tool string, cmd string, pkgs []string, options []string) (*Command, error) {
	if tool == "" {
		return nil, errors.New("Tool is empty.")
	} else if cmd == "" {
		return nil, errors.New("Cmd is empty.")
	}

	return &Command{sudo, tool, cmd, pkgs, options}, nil
}

// String ressembles Command into a valid bash command
func (command *Command) String() string {
	var buf bytes.Buffer
	if command.Sudo == true {
		buf.WriteString("sudo ")
	}

	buf.WriteString(command.Tool)
	buf.WriteString(" ")
	buf.WriteString(command.Cmd)
	buf.WriteString(" ")

	for i := range command.Pkgs {
		buf.WriteString(command.Pkgs[i])
		buf.WriteString(" ")
	}

	for i := range command.Options {
		buf.WriteString(command.Options[i])
		buf.WriteString(" ")
	}

	return strings.TrimSpace(buf.String())
}
